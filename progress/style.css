/* .BurgerButton {
    border-style: solid;
    border-width: .1px;
    cursor: pointer;
    z-index: 1;
} */
.bar1, .bar2, .bar3 {
    width:55px;
    height:9px;
    background-color: blue;
    margin: 6px 0 0 0; /* TOP right bottom Left */}
.change-burger .bar1{
    transform: translate(-1px, 8px) rotate(-45deg); /* right⇨down⇓*/
    background-color: red;  }
.change-burger .bar3{
    transform: translate(-1px, -16px) rotate(45deg);
    ; /* right⇨down⇓*/
    background-color: aquamarine;  }
.change-burger .bar2{
    opacity: 0; }
.L1{
    border-style: solid;
    border-width: 2px;
    border-color:red;}
.L2{
    border-style: solid;
    border-width: 2px;
    border-color: yellow;}
.L3{
    border-style: dashed;
    border-width: 5px;
    border-color: orange;}


.NavBarL1 {
    position: fixed; /*or sticky*/
    top: 0%;
    left: 0%;
    right: 0%;
    width:99%;
    height:40px;
    /* height: 20%; */
    background-color: black;
    z-index:10;
}
.NavBarL2 {
    height:100%;
    width:99%;
}

/*
absolute allows using TBRL properties
sticks to any container with position defined(if not closest relative container), not container
position: absolute takes container out of the hierarchy flow



*/

.BurgerButton{
    top:-25%;
    border-style: dotted;
    border-width: 2px;
    border-color: cyan;
    position:relative;
    z-index:3;
    cursor: pointer;
    float:right}

.DropDown{
    display: none;
    border-style: dotted;
    border-width: 15px;
    border-color:green;
    padding:10% 0 0 0 ;
    top:0%;
    left:0%;
    right:0%;
    bottom:0%;
    height:99%;
    width:100%;
    color:red;
    position: fixed;
    background-color: black;
    /* float:center; */
    opacity:.2;
}

.DropDown-list{
    position: absolute;
    top: 40%;
    left: 50%;
    width:85%;
    transform: translate(-50%, -50%);
    border: 2px solid black;
    padding: 3%;
    text-align: center;
}

.DropDown-list a{
    color: orange;
    font-size: 500px;
    font-weight: 600;
    text-decoration: none;
    text-transform: uppercase;
    transition: 0.3s ease;
}
.DropDown-list a:hover, .DropDown-list a:focus, .DropDown-list a:active{
    color:brown;
}


.stop-scroll{
    overflow:hidden;
    /* opacity: 1; */
}

/* .Intro{
    width:95%;
    position: relative;
} */

.IntroL1 {
    position: absolute;
    top: 50px;
    left: 0%;
    right: 0%;
    height:99%;
    width: 99%;
    background-color: cyan;
    z-index:9;
}

.IntroL2 {
    background-color: orange;
    position: absolute;
    align-items: center;
    inset: 5%;
    /* top: 5%;
    left:5%;
    right: 5%;
    bottom: 5%; */
    width:90%;
    height: 90%;
}

.IntroL3 {
    /* position: absolute; */
    width: 99%;
}

@media (max-width: 600px) {
    .IntroBottom {
      /* flex-direction: column; */
      background-color: blue;
    } }

.Intro span{
    width: 80%;
    height: 100%;
    /* width:200px; */
    /* height:200px; */
    padding: 5px;
    border: 1px solid blue;    
    background-color: yellow; 
}
.IntroL3Header {
    width:99%;
    top: 20%;
    left:0%;
    bottom: 10%;
    height: 20%;
    right:0%;
    z-index: 11;
    background-color: blue;
    font-size: clamp(1rem, 10vw, 2rem);  
}

/* flex:1(oout of sum(flexes)) = flex(flex-grow,flex-shrink=1,     flex-basis=0) */

.IntroL3Bottom{
    display: flex;
}

/* .IntroL3Text{
    background-color: red;
}


.IntroL3Bottom span{
    display: inline-block;
}

.IntroL3Image{
    position: absolute;
    width:600px;
    left:0;
    background-color: beige;
}
.IntroL3Text{
    position: absolute;
    right:0;
} */
.IntroL3Text{
    background-color: red;
}


.IntroL3Bottom span{
    display: inline-block;
}

.IntroL3Image{
    position: absolute;
    width:600px;
    left:0;
    background-color: beige;
}

.IntroL3Text{
    position: absolute;
    /* justify-content: center; */
    /* T R B L */
    inset: 3% 5% 6% 7%;
}




/* display: flex
flex-direction (row: main axis left right horizontal) (column: main cross axis top bottom vertical) default row-horizontal
main axis cross axis
justify-content: flex-end, center, flex-start (relative to flex-direction)
align-items: relative to flex-direction(opposite of justify content) 
align-items: stretch
box-sizing:border-box;

*/




.spacer {
    position:absolute;
    top: 50%;
    /* margin-top:2%; */
    font-size:2em;
    /* height: 100000000px; */
    z-index: 8;
}

img{
    width:100%;
}
